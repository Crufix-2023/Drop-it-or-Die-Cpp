name: Telegram Notifications

on:
  push:
  pull_request:
    types: [opened, closed, reopened]
  release:
    types: [published]
  create:
  delete:

jobs:
  notify:
    runs-on: ubuntu-latest
    steps:
      - name: Prepare notification message
        id: prepare_message
        run: |
          # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø —Å–æ–±—ã—Ç–∏—è
          EVENT_TYPE="${{ github.event_name }}"
          MESSAGE=""

          # –û–±—Ä–∞–±–æ—Ç–∫–∞ PUSH —Å–æ–±—ã—Ç–∏—è
          if [ "$EVENT_TYPE" = "push" ]; then
            if [ -z "${{ github.event.head_commit.id }}" ]; then
              BRANCH_REF=$(echo "${{ github.ref }}" | sed 's/refs\/heads\///')
              MESSAGE="üóëÔ∏è –í–µ—Ç–∫–∞ —É–¥–∞–ª–µ–Ω–∞: $BRANCH_REF"
            else
              MESSAGE="üìå –ù–æ–≤—ã–π push –≤ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π\nüìÇ –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π: ${{ github.repository }}\nüåø –í–µ—Ç–∫–∞: ${{ github.ref_name }}\nüë§ –ê–≤—Ç–æ—Ä: ${{ github.actor }}\nüí¨ –ö–æ–º–º–∏—Ç: ${{ github.event.head_commit.message }}\nüîó –°—Å—ã–ª–∫–∞: ${{ github.event.head_commit.url }}"
            fi

          # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –≤–µ—Ç–∫–∏
          elif [ "$EVENT_TYPE" = "create" ]; then
            if [ "${{ github.ref_type }}" = "branch" ]; then
              MESSAGE="üåø –°–æ–∑–¥–∞–Ω–∞ –Ω–æ–≤–∞—è –≤–µ—Ç–∫–∞: ${{ github.ref_name }}"
            elif [ "${{ github.ref_type }}" = "tag" ]; then
              MESSAGE="üè∑Ô∏è –°–æ–∑–¥–∞–Ω –Ω–æ–≤—ã–π —Ç–µ–≥: ${{ github.ref_name }}"
            fi

          # –û–±—Ä–∞–±–æ—Ç–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –≤–µ—Ç–∫–∏
          elif [ "$EVENT_TYPE" = "delete" ]; then
            if [ "${{ github.ref_type }}" = "branch" ]; then
              MESSAGE="üóëÔ∏è –£–¥–∞–ª–µ–Ω–∞ –≤–µ—Ç–∫–∞: ${{ github.ref_name }}"
            elif [ "${{ github.ref_type }}" = "tag" ]; then
              MESSAGE="üóëÔ∏è –£–¥–∞–ª–µ–Ω —Ç–µ–≥: ${{ github.ref_name }}"
            fi

          # –û–±—Ä–∞–±–æ—Ç–∫–∞ PULL REQUEST
          elif [ "$EVENT_TYPE" = "pull_request" ]; then
            ACTION="${{ github.event.action }}"
            PR_TITLE="${{ github.event.pull_request.title }}"
            PR_AUTHOR="${{ github.event.pull_request.user.login }}"
            PR_URL="${{ github.event.pull_request.html_url }}"
            
            if [ "$ACTION" = "opened" ]; then
              MESSAGE="üÜï –ù–æ–≤—ã–π Pull Request: $PR_TITLE\nüë§ –ê–≤—Ç–æ—Ä: $PR_AUTHOR\nüîó –°—Å—ã–ª–∫–∞: $PR_URL"
            elif [ "$ACTION" = "closed" ]; then
              if [ "${{ github.event.pull_request.merged }}" = "true" ]; then
                MESSAGE="‚úÖ Pull Request –ø—Ä–∏–Ω—è—Ç: $PR_TITLE\nüë§ –ê–≤—Ç–æ—Ä: $PR_AUTHOR\nüîó –°—Å—ã–ª–∫–∞: $PR_URL"
              else
                MESSAGE="‚ùå Pull Request –∑–∞–∫—Ä—ã—Ç: $PR_TITLE\nüë§ –ê–≤—Ç–æ—Ä: $PR_AUTHOR\nüîó –°—Å—ã–ª–∫–∞: $PR_URL"
              fi
            elif [ "$ACTION" = "reopened" ]; then
              MESSAGE="üîÑ Pull Request reopened: $PR_TITLE\nüë§ –ê–≤—Ç–æ—Ä: $PR_AUTHOR\nüîó –°—Å—ã–ª–∫–∞: $PR_URL"
            fi

          # –û–±—Ä–∞–±–æ—Ç–∫–∞ RELEASE
          elif [ "$EVENT_TYPE" = "release" ]; then
            MESSAGE="üéâ –ù–æ–≤—ã–π —Ä–µ–ª–∏–∑: ${{ github.event.release.name }}\nüè∑Ô∏è –í–µ—Ä—Å–∏—è: ${{ github.event.release.tag_name }}\nüìù –û–ø–∏—Å–∞–Ω–∏–µ: ${{ github.event.release.body }}\nüîó –°—Å—ã–ª–∫–∞: ${{ github.event.release.html_url }}"

          else
            MESSAGE="‚ÑπÔ∏è –°–æ–±—ã—Ç–∏–µ: $EVENT_TYPE"
          fi

          # –≠–∫—Ä–∞–Ω–∏—Ä—É–µ–º —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã –¥–ª—è –≤—ã–≤–æ–¥–∞
          MESSAGE="${MESSAGE//'%'/'%25'}"
          MESSAGE="${MESSAGE//$'\n'/'%0A'}"
          MESSAGE="${MESSAGE//$'\r'/'%0D'}"
          
          echo "::set-output name=message::$MESSAGE"

      - name: Send Telegram notification
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          message: ${{ steps.prepare_message.outputs.message }}
